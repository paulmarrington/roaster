# Copyright (C) 2014-5 paul@marrington.net, see /GPL license

# some support functions generated by coffeescript
window.slice$ = window['__slice'] = [].slice
window['__bind'] = (fn, me) ->
  return -> return fn.apply(me, arguments)
window.bind$ = (obj, key, target) ->
  return -> return (target || obj)[key].apply(obj, arguments)

# fill opts from location.search
for nvp in location.search[1..-1].split('&')
  [k, v] = nvp.split('=')
  roaster.opts[k] = v
  
# so commonJS packages have global and process access
window.global = roaster.global = window
window.process = roaster.process =
    noDeprecation: true
    platform: 'browser'
    env: {}
    nextTick: (action) -> setTimeout action, 0
    stdout: { isTTY: false }

# If we specify uSDLC2 instrumentation, load accordingly
if host = roaster.opts['usdlc2-instrumentation']
  require.code host+"/support/usdlc2_browser.js"

# Loading other modules
require.file_type = (name) ->
  name.substr((~-name.lastIndexOf(".") >>> 0) + 2)

require.build_url = (url, args) ->
  sep = if url.indexOf('?') is -1 then '?' else '&'
  items = ("#{key}=#{value}" for key, value of args)
  return "#{url}#{sep}#{items.join('&')}"

require.json = (url, on_loaded) ->
  @server url:url, (err, response) ->
    return on_loaded(err) if err
    on_loaded null, JSON.parse response

require.resource = (url) ->
  return if require.cache[url]
  require.cache[url] = true
  return require.server.sync url:url

require.css = (url) ->
  return if require.cache[url]
  require.cache[url] = true
  require.server url:url, (err, css) ->
    require.element('style', css)

# Each package is loaded and called - in sequence
# The packages themselves can be asynchronous
require.packages = (packages..., ready) ->
  do load_one = ->
    return ready() if not packages.length
    require("client/pkgs/#{packages.shift()}")(load_one)

require.dependency = (packages, libraries..., ready) ->
  url = require.build_url '/server/http/dependency.coffee', packages
  require.json url, ->
    for lib in libraries
      if require.file_type(lib) is 'css' then require.css(lib)
      else require.script(lib)
    ready()

require.css '/client/common.less'
# /client/app.coffee is specific to each server application
require.code roaster.opts.app ? 'app.coffee'
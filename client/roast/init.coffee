# Copyright (C) 2014 paul@marrington.net, see /GPL license

# some support functions generated by coffeescript
window.slice$ = window['__slice'] = [].slice
window['__bind'] = (fn, me) ->
  return -> return fn.apply(me, arguments)
window.bind$ = (obj, key, target) ->
  return -> return (target || obj)[key].apply(obj, arguments)

# Return a named argument from location.search,
# require.opts.name or default
roaster.page_arg = (name, def) ->
  re = new RegExp(name+"=([^&]+)")
  value = re.exec(location.search)
  return value[1] if value?.length is 2
  return roaster.opts[name] if roaster.opts[name]
  return def

# If we specify uSDLC2 instrumentation, load accordingly
if host = roaster.page_arg 'usdlc2-instrumentation'
  require.script host+"/support/usdlc2_browser.js"
  
# so commonJS packages have global and process access
roaster.process = window.process =
    noDeprecation: true
    platform: 'browser'
    env: {}
    nextTick: (action) -> setTimeout action, 10
roaster.global = window

# Loading other modules - finishing with
# project specific initialisation in load=xxx.coffee or js
modules = ["roast/loaders,common/Sequential"]
project_init = (next) ->
  loads = []
  for script in document.getElementsByTagName('script')
    load = script.getAttribute('load')
    loads.push load if load
   if loads.length then require(loads..., next) else next()
    
require modules..., -> project_init ->
  require.css '/client/roast/style.less'
  require.on_ready = (action) -> action()
  action() for action in require.ready